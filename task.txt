task Payment System

Создайте один или несколько “классов”, которые будет эмулировать работу простейшей платежной системы.

Платежная система не использует ни базу данных, ни файловую систему, а вся информация “живет” в оперативной памяти только во время работы вашей программы (класса).

В платежной системе каждый клиент имеет какой-то уникальный номер счета в формате IBAN, используемом в Республике Беларусь (28 букво-цифр). Например: вида “BY04CBDC36029110100040000000”. 

При запуске вашей программы в системе еще нет ни одного счета, кроме двух специальных счетов: счет государства, на который осуществляется “эмиссия” денег; и счет на который отправляются деньги для “уничтожения”. Сами придумайте их номера.

Класс должен уметь делать следующие действия (функционал):
выводить номер специального счета для “эмиссии”;
выводить номер специального счета для “уничтожения”;
осуществлять эмиссию, по добавлению на счет “эмиссии” указанной суммы;
осуществлять отправку определенной суммы денег с указанного счета на счет “уничтожения”;
открывать новый счет, вы можете генерировать случайный номер счета или по вашему алгоритму, или использовать сгенерированный вне вашего класса номер счета просто как параметр;
осуществлять перевод заданной суммы денег между двумя указанными счетами; обеспечить два варианта данной команды: 
1) с несколькими параметрами
2) с единственным параметром в формате json (структуру придумайте сами);
выводить список всех счетов, включая специальные, с указанием остатка денежных средств на них и их статуса (“активен” или “заблокирован”). Выводить необходимо в формате json.


Вы не обязаны реализовывать весь перечисленный функционал, можете делать только его часть, достаточную для демонстрации ваших навыков. Например, junior разработчик может разработать только интерфейс “класса” (перечень функций и их параметров) и описать сценарии вызовов и ожидаемые результаты, без реальной реализации.

Напишите какое-то количество вызовов вашего класса, чтобы продемонстрировать работоспособность платежной системы. Информацию выводите в стандартное устройство вывода (консоль, лог браузера, …), от пользователя можно ничего не вводить, т.е. можете просто “захардкодить” какие-то сценарии, вызывая в определенном порядке функции с конкретными параметрами номеров счетов и сумм.

Приветствуется демонстрация обработки нестандартных ситуаций (отправка денег на несуществующий счет, работа с “заблокированным” счетом, нехватка денег на счете для операции и т.п.).

Приветствуется написание Unit-тестов.

Приветствуется описание вариантов использования функций вашего класса (например, в виде комментариев или мини документации).

Обязательно обеспечьте демонстрацию вашей работы на одном из онлайн компиляторов и пришлите ссылку. Вот примеры, онлайн компиляторов, Google предоставит больше:
https://www.onlinegdb.com/
https://www.programiz.com/golang/online-compiler/
https://go.dev/play/
https://onecompiler.com/
В указанных системах обычно сверху-справа, либо сбоку-слева можно выбрать тот язык программирования, на который вы проходите собеседование.
Если вы не справились с размещением на онлайн компиляторе, тогда создайте исчерпывающую инструкцию как запустить ваш код.

Дополнительно приветствуется заливка кода на github или другую систему контроля исходного кода.

Если у вас возникли существенные вопросы по смыслу этого задания, можете их письменно по электронной почте задать через контактное лицо, кто отправлял вам задание.